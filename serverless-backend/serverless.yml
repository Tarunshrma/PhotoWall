service:
  name: photowall-api
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x

  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    POSTS_TABLE: tblPosts-${self:provider.stage}

  stage: ${opt:stage,'dev'}
  region: ${opt:region,'ap-south-1'}
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource:
        - "Fn::GetAtt": [ PostsTable, Arn ]  

functions:
  GetPosts:
    handler: src/lambda/http/getPosts.handler
    events:
      - http:
          method: get
          path: posts
          cors: true

  AddPost:
    handler: src/lambda/http/addPost.handler
    events:
      - http:
          method: post
          path: posts
          cors: true
          request:
            # Schema that will be used to validate incoming requests
            schema:
              application/json: ${file(models/add-post-model.json)}


resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.POSTS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH