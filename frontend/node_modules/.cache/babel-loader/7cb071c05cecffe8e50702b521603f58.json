{"ast":null,"code":"var _jsxFileName = \"/Users/tarunsmac/Documents/Tarun/Projects/Learning/CLOUD-NANODEGREE/React/InstaApp/learning-reactjs/frontend/src/Components/PhotoComments.js\";\nimport React, { Component } from \"react\";\n\nclass PhotoComments extends Component {\n  constructor() {\n    super();\n    this.handleAddComment = this.handleAddComment.bind(this);\n  }\n\n  handleAddComment(event) {\n    event.preventDefault();\n    const newComment = event.target.elements.comment.value;\n    const photoId = this.props.photoId;\n\n    if (newComment !== '') {\n      this.props.addComment(newComment, photoId);\n      event.target.elements.comment.value = \"\";\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, this.props.comments.map((comment, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }\n      }, \" \", comment, \" \");\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this.handleAddComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \" Enter Comment\",\n      name: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default PhotoComments;","map":{"version":3,"sources":["/Users/tarunsmac/Documents/Tarun/Projects/Learning/CLOUD-NANODEGREE/React/InstaApp/learning-reactjs/frontend/src/Components/PhotoComments.js"],"names":["React","Component","PhotoComments","constructor","handleAddComment","bind","event","preventDefault","newComment","target","elements","comment","value","photoId","props","addComment","componentDidMount","console","log","render","comments","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAOC,aAAP,SAA6BD,SAA7B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,gBAAgB,CAACE,KAAD,EAAO;AACnBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,KAAjD;AACA,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AACA,QAAGL,UAAU,KAAK,EAAlB,EAAqB;AACjB,WAAKM,KAAL,CAAWC,UAAX,CAAsBP,UAAtB,EAAiCK,OAAjC;AACAP,MAAAA,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,KAA9B,GAAsC,EAAtC;AACH;AACJ;;AAEDI,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,GAApB,CAAwB,CAACV,OAAD,EAASW,KAAT,KAAiB;AACtC,0BAAO;AAAG,QAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiBX,OAAjB,MAAP;AACH,KAFA,CADE,eAIH;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKP,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,gBAA/B;AAAgD,MAAA,IAAI,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJG,CAAP;AASH;;AA9BiC;;AAiCtC,eAAeF,aAAf","sourcesContent":["import React,{Component} from \"react\"\n\nclass  PhotoComments extends Component{\n    constructor(){\n        super();\n        this.handleAddComment = this.handleAddComment.bind(this);\n    }\n\n    handleAddComment(event){\n        event.preventDefault();\n        const newComment = event.target.elements.comment.value;\n        const photoId = this.props.photoId;\n        if(newComment !== ''){\n            this.props.addComment(newComment,photoId);\n            event.target.elements.comment.value = \"\";\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n    }\n\n    render(){\n        return <div className=\"comment\" >\n            {this.props.comments.map((comment,index)=>{\n                return <p key={index}> {comment} </p>\n            })}\n            <form className=\"comment-form\" onSubmit={this.handleAddComment}>\n                <input type=\"text\" placeholder=\" Enter Comment\" name=\"comment\"/>\n                <input type=\"submit\" hidden/>\n            </form>\n        </div>\n    }\n}\n\nexport default PhotoComments;"]},"metadata":{},"sourceType":"module"}